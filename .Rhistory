education = education,
income = income)
}
if (dataset %in% c("immigrants", "omnibus")) {
df.comb <- tibble(rid = rep(df$rid, 10),
name = name,
race = race,
specific.race = specific.race,
citizen = citizen,
education = education,
income = income,
res.age = rep(df$age, 10),
res.male = rep(df$male, 10),
res.income = rep(df$income, 10),
res.edu = rep(df$edu, 10),
res.citizenship = rep(df$us_citizen, 10),
res.race = rep(df$race, 10))
}
df.comb <- df.comb[df.comb$race != "", ]
df.comb <- df.comb[df.comb$name != "", ]
df.comb <- df.comb[df.comb$name != "x", ]
df.all <- merge(names_df, df.comb, by = "name", all = F)
df.all$w.asian <- NA
df.all$w.asian[df.all$identity == "White Asian"] <- 1
df.all$w.asian[df.all$identity != "White Asian"] <- 0
df.all$identity[df.all$identity == "White Asian"] <- "Asian or Pacific Islander"
df.all$identity <- fct_relevel(df.all$identity, "White")
df.all$education.ord <- NA
df.all$education.ord[df.all$education == "High school"] <- 1
df.all$education.ord[df.all$education == "Bachelor's degree"] <- 2
df.all$education.ord[df.all$education == "Master's degree"] <- 3
df.all$education.ord[df.all$education == "Ph.D. degree"] <- 4
df.all$income.ord <- NA
df.all$income.ord[df.all$income == "Low income (Less than $40,100)"] <- 1
df.all$income.ord[df.all$income == "Middle income\t($41,000 - $120,400)"] <- 2
df.all$income.ord[df.all$income == "Upper income (More than $120,400)"] <- 3
df.all$citizen <- as.numeric(as.factor(df.all$citizen)) - 2
df.all <- df.all[df.all$citizen != -1, ]
df.all$match <- as.numeric(df.all$identity == df.all$race)
return(df.all)
}
model.names <- c("Correct", "Citizen", "Education", "Income")
df2summ <- function(df) {
mod.match <- lm(match ~ identity + w.asian, data = df)
mod.ed <- lm(education.ord ~ identity + w.asian, data = df)
mod.income <- lm(income.ord ~ identity + w.asian, data = df)
mod.citizen <- lm(citizen ~ identity + w.asian, data = df)
summ.match <-
summ(mod.match,
model.names = model.names[1],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American"),
cluster = "rid",
robust = "HC3",
colors = "#000000") %>%
tidy(conf.int = T) %>%
mutate(model = "Correct (0/1)")
summ.citizen <-
summ(mod.citizen,
model.names = model.names[2],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American"),
cluster = "rid",
robust = "HC3",
colors = "#000000") %>%
tidy(conf.int = T) %>%
mutate(model = "Citizen (0/1)")
summ.ed <-
summ(mod.ed,
model.names = model.names[3],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American"),
cluster = "rid",
robust = "HC3",
colors = "#000000") %>%
tidy(conf.int = T) %>%
mutate(model = "Education (1-4)")
summ.income <-
summ(mod.income,
model.names = model.names[4],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American"),
cluster = "rid",
robust = "HC3",
colors = "#000000") %>%
tidy(conf.int = T) %>%
mutate(model = "Income (1-3)")
out <- bind_rows(summ.match, summ.citizen, summ.ed, summ.income)
return(out)
}
df2plot_all <- function(df) {
df %>%
filter(term != "(Intercept)") %>%
mutate(term = recode(term,
"identityAsian or Pacific Islander" = "Asian",
"w.asian" = "Asian (White first name)",
"identityHispanic" =  "Hispanic",
"identityBlack or African American" = "Black"
)) %>%
mutate(model = fct_relevel(model, "Correct (0/1)")) %>%
distinct() %>%
ggplot(aes(x = term, y = estimate, ymax = estimate+(1.96*std.error), ymin = estimate-(1.96*std.error), col = Data, group = Data, label = round(estimate, 2))) +
geom_pointrange(aes(group = Data, color = Data)) +
facet_wrap(~model) +
ggthemes::scale_color_colorblind() +
labs(x = "", y = "",
col = "Datasets") +
coord_flip() +
geom_hline(yintercept = 0, linetype = "dashed")
#ggrepel::geom_text_repel()
}
df2plot <- function(df) {
mod.match <- lm(match ~ identity + w.asian, data = df)
mod.ed <- lm(education.ord ~ identity + w.asian, data = df)
mod.income <- lm(income.ord ~ identity + w.asian, data = df)
mod.citizen <- lm(citizen ~ identity + w.asian, data = df)
model.names <- c("Correct", "Citizen", "Education", "Income")
plot.match <-
plot_summs(mod.match,
model.names = model.names[1],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American"),
cluster = "rid",
robust = "HC3",
colors = "#000000",
scale = TRUE) +
theme_ipsum_ps() +
ggtitle("Correct (0/1)") +
ylab("")
plot.citizen <-
plot_summs(mod.citizen,
model.names = model.names[2],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American"),
cluster = "rid",
robust = "HC3",
colors = "#000000",
scale = TRUE) +
theme_ipsum_ps() +
ggtitle("Citizen (0/1)") +
ylab("")
plot.ed <-
plot_summs(mod.ed,
model.names = model.names[3],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American"),
cluster = "rid",
robust = "HC3",
colors = "#000000",
scale = TRUE) +
theme_ipsum_ps() +
ggtitle("Education (1-4)") +
ylab("")
plot.income <-
plot_summs(mod.income,
model.names = model.names[4],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American"),
cluster = "rid",
robust = "HC3",
colors = "#000000",
scale = TRUE) +
theme_ipsum_ps() +
ggtitle("Income (1-3)") +
ylab("")
out <- (plot.match + plot.citizen) / (plot.ed + plot.income)
return(out)
}
df2plot_covariate <- function(df) {
mod.match <- lm(match ~ identity + w.asian + res.age + factor(res.male) + res.income + res.edu + factor(res.citizenship) + factor(res.race), data = df)
mod.ed <- lm(education.ord ~ identity + w.asian + res.age + factor(res.male) + res.income + res.edu + factor(res.citizenship) + factor(res.race), data = df)
mod.income <- lm(income.ord ~ identity + w.asian + res.age + factor(res.male) + res.income + res.edu + factor(res.citizenship) + factor(res.race), data = df)
mod.citizen <- lm(citizen ~ identity + w.asian + res.age + factor(res.male) + res.income + res.edu + factor(res.citizenship) + factor(res.race), data = df)
model.names <- c("Correct", "Citizen", "Education", "Income")
plot.match <-
plot_summs(mod.match,
model.names = model.names[1],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American",
"Respondent age" = "res.age",
"Respondent = male" = "`factor(res.male)`",
"Respondent income" = "res.income",
"Respondent education" = "res.edu",
"Respondent = U.S. citizen" = "`factor(res.citizenship)`",
"Respondent = Black" =
"`factor(res.race)`Black",
"Respondent = Indigenous" =
"`factor(res.race)`Indigenous`",
"Respondent = Latino" =
"`factor(res.race)`Latino",
"Respondent = White" =
"`factor(res.race)`White"),
cluster = "rid",
robust = "HC3",
colors = "#000000",
scale = TRUE) +
theme_ipsum_ps() +
ggtitle("Correct (0/1)") +
ylab("")
plot.citizen <-
plot_summs(mod.citizen,
model.names = model.names[2],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American",
"Respondent age" = "res.age",
"Respondent = male" = "`factor(res.male)`",
"Respondent income" = "res.income",
"Respondent education" = "res.edu",
"Respondent = U.S. citizen" = "`factor(res.citizenship)`",
"Respondent = Black" =
"`factor(res.race)`Black",
"Respondent = Indigenous" =
"`factor(res.race)`Indigenous`",
"Respondent = Latino" =
"`factor(res.race)`Latino",
"Respondent = White" =
"`factor(res.race)`White"),
cluster = "rid",
robust = "HC3",
colors = "#000000",
scale = TRUE) +
theme_ipsum_ps() +
ggtitle("Citizen (0/1)") +
ylab("")
plot.ed <-
plot_summs(mod.ed,
model.names = model.names[3],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American",
"Respondent age" = "res.age",
"Respondent = male" = "`factor(res.male)`",
"Respondent income" = "res.income",
"Respondent education" = "res.edu",
"Respondent = U.S. citizen" = "`factor(res.citizenship)`",
"Respondent = Black" =
"`factor(res.race)`Black",
"Respondent = Indigenous" =
"`factor(res.race)`Indigenous`",
"Respondent = Latino" =
"`factor(res.race)`Latino",
"Respondent = White" =
"`factor(res.race)`White"),
cluster = "rid",
robust = "HC3",
colors = "#000000",
scale = TRUE) +
theme_ipsum_ps() +
ggtitle("Education (1-4)") +
ylab("")
plot.income <-
plot_summs(mod.income,
model.names = model.names[4],
coefs = c("Asian" = "identityAsian or Pacific Islander",
"Asian (White first name)" = "w.asian",
"Hispanic" = "identityHispanic",
"Black" = "identityBlack or African American",
"Respondent age" = "res.age",
"Respondent = male" = "`factor(res.male)`",
"Respondent income" = "res.income",
"Respondent education" = "res.edu",
"Respondent = U.S. citizen" = "`factor(res.citizenship)`",
"Respondent = Black" =
"`factor(res.race)`Black",
"Respondent = Indigenous" =
"`factor(res.race)`Indigenous`",
"Respondent = Latino" =
"`factor(res.race)`Latino",
"Respondent = White" =
"`factor(res.race)`White"),
cluster = "rid",
robust = "HC3",
colors = "#000000",
scale = TRUE) +
theme_ipsum_ps() +
ggtitle("Income (1-3)") +
ylab("")
out <- (plot.match + plot.citizen) / (plot.ed + plot.income)
return(out)
}
# select columns
df2select <- function(df) {
df %>%
select(name, first, last, w.asian, identity, match)
}
# rename columns
df_rename <- function(df) {
names(df)[names(df) == 'rid'] <- 'id'
names(df)[names(df) == 'match'] <- 'correct'
return(df)
}
# Standard error
se <- function(x) sqrt(var(x) / length(x))
# Min-max scaling
normalize <- function(x){(x- min(x, na.rm = T))/(max(x, na.rm = T)-min(x, na.rm = T))}
add_satisficing <- function(df) {
df$num_secs <- parse_number(df$Duration..in.seconds.)
threshold <- median(df$num_secs)*0.4
message(glue("The the median duration is {threshold} minutees"))
df$satisficing <- if_else(df$num_secs < threshold, 1, 0)
if (length(df$rid) != 0) { # immigrants, omnibus
df <- df %>% select(rid, satisficing)
} else { # perceptions
df <- df %>% select(ResponseId ,satisficing)
}
return(df)
}
if (!require(pacman)) install.packages("pacman")
pacman::p_load(here, # reproducibility
# wrangling
tidyverse,
tools,
jtools,
# data visualization
hrbrthemes,
viridis,
ggstance,
patchwork,
gridExtra,
ggrepel,
# others
glue
)
source(here("functions", "utils.R"))
# Get the file names
file_names <- list.files(here("data"))[str_detect(list.files(here("data")), "2021_")]
# Import the csv files; Remove the first two rows
## Immigrants
immigrants_df <- read_csv_custom(1)
## Omnibus
omnibus_df <- read_csv_custom(2)
## Name perceptions
perceptions_df <- read_csv_custom(3)
## Name dataset
names_df <- read.csv(here("data", "names.csv"))
immigrants_df$Q109 %>% unique()
immigrants_df$Q110 %>% unique()
immigrants_df$Q110 %>% table()
immigrants_df$Q109 %>% unique()
immigrants_df$Q109 == "I understand"
immigrants_df$Q110 == "Extremely interested,Very interested"
immigrants_df$Q109 == "I understand" % immigrants_df$Q110 == "Extremely interested,Very interested"
immigrants_df$Q109 == "I understand" & immigrants_df$Q110 == "Extremely interested,Very interested"
as.numeric(immigrants_df$Q109 == "I understand") + as.numeric(immigrants_df$Q110 == "Extremely interested,Very interested")
as.numeric(immigrants_df$Q109 == "I understand") + as.numeric(immigrants_df$Q110 == "Extremely interested,Very interested") == 2
if_else(as.numeric(immigrants_df$Q109 == "I understand") + as.numeric(immigrants_df$Q110 == "Extremely interested,Very interested") == 2, 1, 0)
immigrants_df %>%
mutate(immigrants_rid_att = if_else(Q109 == "I understand" & Q110 == "Extremely interested,Very interested", 1, 0))
immigrants_rid_att <- immigrants_df %>%
mutate(attentive = if_else(Q109 == "I understand" & Q110 == "Extremely interested,Very interested", 1, 0))  %>%
select(rid, attentive)
immigrants_rid_att$attentive
omnibus_df$Q194 %>% unique()
omnibus_df$Q195 %>% unique()
perceptions_df$Q110 %>% unique()
perceptions_df$Q1 %>% unique()
perceptions_df$Q2 %>% unique()
perceptions_df$Q3 %>% unique()
perceptions_df$Q4 %>% unique()
perceptions_df$Q5 %>% unique()
perceptions_df$Q6 %>% unique()
perceptions_df$Q7 %>% unique()
perceptions_df$Q8 %>% unique()
perceptions_df$Q9 %>% unique()
perceptions_df$Q10 %>% unique()
perceptions_df$Q11 %>% unique()
perceptions_df$Q12 %>% unique()
perceptions_df$Q13 %>% unique()
perceptions_df$Q14 %>% unique()
perceptions_df$Q15 %>% unique()
perceptions_df$Q16 %>% unique()
perceptions_df$Q17 %>% unique()
perceptions_df$Q18 %>% unique()
perceptions_df$Q19 %>% unique()
perceptions_df$Q20 %>% unique()
perceptions_df$Q21 %>% unique()
perceptions_df$Q22 %>% unique()
perceptions_df$Q23 %>% unique()
perceptions_df$Q24 %>% unique()
perceptions_df$Q25 %>% unique()
perceptions_df$Q26 %>% unique()
perceptions_df$Q27 %>% unique()
perceptions_df %>%
select(contains("Q"))
immigrants_rid_att <- immigrants_df %>%
mutate(attentive = if_else(Q109 == "I understand" & Q110 == "Extremely interested,Very interested", 1, 0))  %>%
select(rid, attentive)
omnibus_rid_att <- omnibus_df %>%
mutate(attentive = if_else(Q194 == "I understand" & Q195 == "Extremely interested,Very interested", 1, 0))  %>%
select(rid, attentive)
immigrants_rid_sat <- add_satisficing(immigrants_df)
omnibus_rid_sat <- add_satisficing(omnibus_df)
perceptions_rid_sat <- add_satisficing(perceptions_df)
---
title: "Preparing datasets"
if (!require(pacman)) install.packages("pacman")
pacman::p_load(here, # reproducibility
# wrangling
tidyverse,
tools,
jtools,
# data visualization
hrbrthemes,
viridis,
ggstance,
patchwork,
gridExtra,
ggrepel,
# others
glue
)
source(here("functions", "utils.R"))
# Get the file names
file_names <- list.files(here("data"))[str_detect(list.files(here("data")), "2021_")]
# Import the csv files; Remove the first two rows
## Immigrants
immigrants_df <- read_csv_custom(1)
## Omnibus
omnibus_df <- read_csv_custom(2)
## Name perceptions
perceptions_df <- read_csv_custom(3)
## Name dataset
names_df <- read.csv(here("data", "names.csv"))
immigrants_rid_att <- immigrants_df %>%
mutate(attentive = if_else(Q109 == "I understand" & Q110 == "Extremely interested,Very interested", 1, 0))  %>%
select(rid, attentive)
omnibus_rid_att <- omnibus_df %>%
mutate(attentive = if_else(Q194 == "I understand" & Q195 == "Extremely interested,Very interested", 1, 0))  %>%
select(rid, attentive)
immigrants_rid_sat <- add_satisficing(immigrants_df)
omnibus_rid_sat <- add_satisficing(omnibus_df)
perceptions_rid_sat <- add_satisficing(perceptions_df)
omnibus_df <-
clean_omnibus_df(omnibus_df)
immigrants_df <- clean_immigrant_df(immigrants_df)
perceptions_df <- clean_perceptions_df(perceptions_df)
immigrants_all <- df2comb(immigrants_df, dataset = "immigrants")
omnibus_all <- df2comb(omnibus_df, dataset = "omnibus")
perceptions_all <- df2comb(perceptions_df, dataset = "perceptions")
# add attention checks
immigrants_all <- immigrants_all %>% left_join(immigrants_rid_att, by = c("rid" = "rid"))
omnibus_all <- omnibus_all %>% left_join(omnibus_rid_att, by = c("rid" = "rid"))
# add satisficing checks
immigrants_all <- immigrants_all %>% left_join(immigrants_rid_sat, by = c("rid" = "rid"))
omnibus_all <- omnibus_all %>% left_join(omnibus_rid_sat, by = c("rid" = "rid"))
perceptions_all <- perceptions_all %>% left_join(perceptions_rid_sat, by = c("rid" = "ResponseId"))
# Study1
study1 <- perceptions_all %>%
select(rid, name, first, last, w.asian, identity, race, specific.race, citizen, education, education.ord, income, income.ord, match, satisficing)
# Study2
study2 <- omnibus_all %>%
select(rid, name, first, last, w.asian, identity, race, specific.race, citizen, education, education.ord, income, income.ord, match, res.age, res.male, res.income, res.edu, res.citizenship, res.race, satisficing)
# Study3
study3 <- immigrants_all %>%
select(rid, name, first, last, w.asian, identity, race, specific.race, citizen, education, education.ord, income, income.ord, match, res.age, res.male, res.income, res.edu, res.citizenship, res.race, satisficing)
# Rename rid -> id, match -> correct
study1 <- df_rename(study1)
study2 <- df_rename(study2)
study3 <- df_rename(study3)
# Save csv files
write.csv(study1, here("data_outputs", "study-1-names.csv"))
write.csv(study2, here("data_outputs", "study-2-names.csv"))
write.csv(study3, here("data_outputs", "study-3-names.csv"))
# Save rds files
write_rds(study1, here("data_outputs", "study-1-names.rds"))
write_rds(study2, here("data_outputs", "study-2-names.rds"))
write_rds(study3, here("data_outputs", "study-3-names.rds"))
# Save the three datasets as an object
save(study1, study2, study3, file = here("data_outputs", "study123.rda"))
# Save the three datasets as a joined dataframe (using full join)
study1 <- study1 %>% mutate(study = "Study1")
study2 <- study2 %>% mutate(study = "Study2")
study3 <- study3 %>% mutate(study = "Study3")
study_combined <- reduce(list(study1, study2, study3), full_join)
# CSV
write_csv(study_combined, here("data_outputs", "study123.csv"))
# RDS
write_rds(study_combined, here("data_outputs", "study123.rds"))
# All
df <- bind_rows(mutate(df2select(immigrants_all), Data = "Study 3"),
mutate(df2select(omnibus_all), Data = "Study 2"),
mutate(df2select(perceptions_all), Data = "Study 1"))
names <- df %>%
group_by(name, first, last, w.asian, identity) %>%
summarise(mean.correct = mean(match),
sd.correct = sd(match))
# CSV
write.csv(names, here("data_outputs", "names.csv"))
# RDS
write_rds(names, here("data_outputs", "names.rds"))
nrow(study1) ; nrow(study2) ; nrow(study3)
