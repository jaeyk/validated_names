str_detect(identity, name_race)) %>%
group_by(first) %>%
summarize(pct_correct = mean(correct)) %>%
mutate(mean_pct_correct = mean(pct_correct),
sd_pct_correct = sd(pct_correct)) %>%
ggplot(aes(x = fct_reorder(first, pct_correct), pct_correct)) +
geom_point() +
geom_hline(yintercept = 0.5, linetype = "dashed") +
labs(
title = "Sort by first name",
subtitle = glue("Respondent race: {respondent_race},
Intended race: {respondent_race}"),
x = "", y = "% correct") +
coord_flip() +
ylim(c(0.3 , 1))
last_name / first_name
}
#' summarize the correct scores by last and first names
#'
#' @param resondent_race "Black," "White," "AAPI," "Latino," "Other," "Indigenous"
#' @param name_race "Black or African American," "White," "Asian or Pacific Islander," "Hispanic,"
#' @return
#' @importFrom
#' @export
sum_last_first_names <- function(respondent_race, name_race) {
last_name <- study23 %>%
filter(str_detect(res.race, respondent_race) &
str_detect(identity, name_race)) %>%
group_by(last) %>%
summarize(pct_correct = mean(correct)) %>%
mutate(mean_correct = mean(pct_correct),
se_correct = se(pct_correct))
first_name <- study23 %>%
filter(str_detect(res.race, respondent_race) &
str_detect(identity, name_race)) %>%
group_by(first) %>%
summarize(pct_correct = mean(correct)) %>%
mutate(mean_correct = mean(pct_correct),
se_correct = se(pct_correct))
joined <- full_join(last_name, first_name) %>%
select(last, first, mean_correct, se_correct)
out <- joined %>% pivot_longer(c("last", "first"),
"Name type") %>%
filter(!is.na(value)) %>%
mutate(`Name type` = recode(`Name type`,
"last" = "Last name",
"first" = "First name"),
res.race = respondent_race,
identity = if_else(length(unique(res.race)) == 1, name_race, respondent_race)) %>%
select(-value) %>%
distinct() %>%
return(out)
}
diff_summ <- function(category, category_name) {
study123 %>%
group_by(identity, w.asian, name, correct) %>%
summarize(category_name = mean(get(category))) %>%
pivot_wider(names_from = correct,
values_from = category_name) %>%
mutate(diff = `1` - `0`,
covariate = category_name) %>%
select(-c(`1`, `0`))
}
dum_mean_se <- function(group) {
dum_sum_ext %>%
pivot_longer(contains(group),
"type",
"estimate") %>%
mutate(type = str_replace_all(type, glue("{group}_"), "")) %>%
select(c(1, 10, 11)) %>%
pivot_wider(names_from = type,
values_from = value) %>%
filter(str_detect(tolower(identity), glue("{group}")))
}
dum_sum_ext
#' extract best validated names from the correspodence between intended and perceived race
#'
#' @param resondent_race "Black," "White," "AAPI," "Latino," "Other," "Indigenous"
#' @param name_race "Black or African American," "White," "Asian or Pacific Islander," "Hispanic,"
#' @return
#' @importFrom
#' @export
better_than_mean_names <- function(respondent_race, name_race) {
filtered <- study23 %>%
filter(str_detect(res.race, respondent_race) &
str_detect(identity, name_race))
summed <- filtered %>%
group_by(name) %>%
summarize(pct_correct = mean(correct)) %>%
mutate(mean_correct_score = mean(pct_correct)) %>%
filter(pct_correct > mean_correct_score) %>%
mutate(res.race = respondent_race,
identity = if_else(length(unique(res.race)) == 1,
name_race, respondent_race),
mean_correct_score = round(mean_correct_score, 2)) %>%
arrange(desc(pct_correct)) %>%
select(name, res.race, identity, pct_correct, mean_correct_score)
out <- summed %>%
mutate(pct_quality_names = round(nrow(summed)/nrow(filtered), 2))
return(out)
}
#' visualize the correct scores by last and first names
#'
#' @param resondent_race "Black," "White," "AAPI," "Latino," "Other," "Indigenous"
#' @param name_race "Black or African American," "White," "Asian or Pacific Islander," "Hispanic,"
#' @return
#' @importFrom
#' @export
viz_last_first_names <- function(respondent_race, name_race) {
last_name <- study23 %>%
filter(str_detect(res.race, respondent_race) &
str_detect(identity, name_race)) %>%
group_by(last) %>%
summarize(pct_correct = mean(correct)) %>%
mutate(mean_pct_correct = mean(pct_correct),
sd_pct_correct = sd(pct_correct)) %>%
ggplot(aes(x = fct_reorder(last, pct_correct), pct_correct)) +
geom_point() +
geom_hline(yintercept = 0.5, linetype = "dashed") +
labs(
title = "Sort by last name",
subtitle = glue("Respondent race: {respondent_race},
Intended race: {respondent_race}"),
x = "", y = "% correct") +
coord_flip() +
ylim(c(0.3 , 1))
first_name <- study23 %>%
filter(str_detect(res.race, respondent_race) &
str_detect(identity, name_race)) %>%
group_by(first) %>%
summarize(pct_correct = mean(correct)) %>%
mutate(mean_pct_correct = mean(pct_correct),
sd_pct_correct = sd(pct_correct)) %>%
ggplot(aes(x = fct_reorder(first, pct_correct), pct_correct)) +
geom_point() +
geom_hline(yintercept = 0.5, linetype = "dashed") +
labs(
title = "Sort by first name",
subtitle = glue("Respondent race: {respondent_race},
Intended race: {respondent_race}"),
x = "", y = "% correct") +
coord_flip() +
ylim(c(0.3 , 1))
last_name / first_name
}
#' summarize the correct scores by last and first names
#'
#' @param resondent_race "Black," "White," "AAPI," "Latino," "Other," "Indigenous"
#' @param name_race "Black or African American," "White," "Asian or Pacific Islander," "Hispanic,"
#' @return
#' @importFrom
#' @export
sum_last_first_names <- function(respondent_race, name_race) {
last_name <- study23 %>%
filter(str_detect(res.race, respondent_race) &
str_detect(identity, name_race)) %>%
group_by(last) %>%
summarize(pct_correct = mean(correct)) %>%
mutate(mean_correct = mean(pct_correct),
se_correct = se(pct_correct))
first_name <- study23 %>%
filter(str_detect(res.race, respondent_race) &
str_detect(identity, name_race)) %>%
group_by(first) %>%
summarize(pct_correct = mean(correct)) %>%
mutate(mean_correct = mean(pct_correct),
se_correct = se(pct_correct))
joined <- full_join(last_name, first_name) %>%
select(last, first, mean_correct, se_correct)
out <- joined %>% pivot_longer(c("last", "first"),
"Name type") %>%
filter(!is.na(value)) %>%
mutate(`Name type` = recode(`Name type`,
"last" = "Last name",
"first" = "First name"),
res.race = respondent_race,
identity = if_else(length(unique(res.race)) == 1, name_race, respondent_race)) %>%
select(-value) %>%
distinct() %>%
return(out)
}
diff_summ <- function(category, category_name) {
study123 %>%
group_by(identity, w.asian, name, correct) %>%
summarize(category_name = mean(get(category))) %>%
pivot_wider(names_from = correct,
values_from = category_name) %>%
mutate(diff = `1` - `0`,
covariate = category_name) %>%
select(-c(`1`, `0`))
}
dum_mean_se <- function(group) {
dum_sum_ext %>%
pivot_longer(contains(group),
"type",
"estimate") %>%
mutate(type = str_replace_all(type, glue("{group}_"), "")) %>%
select(c(1, 10, 11)) %>%
pivot_wider(names_from = type,
values_from = value)
}
dum_mean_se("white")
dum_sum_ext
dum_sum_ext <- dum_sum %>%
group_by(identity) %>%
summarize(white_mean = mean(white_pct),
asian_mean = mean(asian_pct),
black_mean = mean(black_pct),
hispanic_mean = mean(latino_pct))
dum_sum_ext
dum_sum_ext %>%
pivot_longer(contains("mean"),
type,
estimate)
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = type,
values_to = estimate)
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = "type",
values_to = "estimate")
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = "type",
values_to = "estimate") +
ggplot(aes(x = idenitity, y = estimate, col = type)) +
geom_col()
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = "type",
values_to = "estimate") +
ggplot(aes(x = idenitity, y = estimate, col = type))
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = "type",
values_to = "estimate")
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = "type",
values_to = "estimate") %>%
ggplot(aes(x = identity, y = estimate, col = type))
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = "type",
values_to = "estimate") %>%
ggplot(aes(x = identity, y = estimate, col = type)) +
geom_col()
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = "type",
values_to = "estimate") %>%
ggplot(aes(x = identity, y = estimate, fill = type)) +
geom_col()
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = "type",
values_to = "estimate") %>%
ggplot(aes(x = identity, y = estimate, fill = type)) +
geom_col(position = "dodge")
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = "type",
values_to = "estimate") %>%
ggplot(aes(x = identity, y = estimate, fill = type)) +
geom_col(position = "dodge") +
coord_flip()
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = "type",
values_to = "estimate") %>%
ggplot(aes(x = identity, y = estimate, fill = type)) +
geom_col(position = "dodge") +
coord_flip() +
ggthemes::scale_fill_colorblind()
dum_sum_ext %>%
pivot_longer(contains("mean"),
names_to = "type",
values_to = "estimate") %>%
ggplot(aes(x = identity, y = estimate, fill = type)) +
geom_col(position = "dodge") +
coord_flip() +
ggthemes::scale_fill_colorblind() +
labs(x = "Names' racial prevalence",
y = "Average of the percentages of the names' racial implicaiton")
dum_sum <- study123_dummies %>%
group_by(identity, name) %>%
summarize(white_pct = mean(race_White, na.rm = TRUE),
asian_pct = mean(`race_Asian or Pacific Islander`, na.rm = TRUE),
black_pct = mean(`race_Black or African American`),
latino_pct = mean(race_Hispanic),
other_pct = mean(race_Other))
dum_sum
write_rds(dum_sum, here("data_outputs", "name_race_response.rds"))
# Chunk 1
if (!require(pacman)) install.packages("pacman")
pacman::p_load(here, # reproducibility
# wrangling
tidyverse,
tools,
jtools,
# data visualization
ggpubr,
viridis,
ggstance,
patchwork,
gridExtra,
ggrepel)
source(here("functions", "utils.R"))
ggplot2::theme_set(ggpubr::theme_pubr())
# Chunk 2
# Get the file names
file_names <- list.files(here("data"))[str_detect(list.files(here("data")), "2021_")]
# Import the csv files; Remove the first two rows
## Immigrants
immigrants_df <- read_csv_custom(1)
## Omnibus
omnibus_df <- read_csv_custom(2)
## Name perceptions
perceptions_df <- read_csv_custom(3)
## Name dataset
names_df <- read.csv(here("data", "names.csv"))
write_rds(names_df, here("data_outputs", "names.rds"))
dim(dum_sum)
dum_sum
dum_sum %>%
filter(str_detect(tolower(idenitty), "black"))
dum_sum %>%
filter(str_detect(tolower(identity), "black"))
dum_sum %>%
filter(str_detect(tolower(identity), "black")) %>%
slice(1)
dim(dum_sum)
names(dum_sum)
hq_group_group_names <- readRDS("~/validated_names/data_outputs/hq_group_group_names.rds")
hq_white_other_names <- readRDS("~/validated_names/data_outputs/hq_white_other_names.rds")
hq_other_white_names <- readRDS("~/validated_names/data_outputs/hq_other_white_names.rds")
# R CRAN packages
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, here, glue, purrr, ggthemes, patchwork, ggrepel, ggpubr, estimatr, fastDummies)
ggplot2::theme_set(ggpubr::theme_pubr())
# Custom functions
source(here("functions", "validate.r"))
source(here("functions", "utils.r"))
load(file = here("data_outputs", "study123.rda"))
# Save the three datasets as an object
save(study1, study2, study3, file = here("data_outputs", "study123.rda"))
if (!require(pacman)) install.packages("pacman")
pacman::p_load(here, # reproducibility
# wrangling
tidyverse,
tools,
jtools,
# data visualization
hrbrthemes,
viridis,
ggstance,
patchwork,
gridExtra,
ggrepel)
source(here("functions", "utils.R"))
# Get the file names
file_names <- list.files(here("data"))[str_detect(list.files(here("data")), "2021_")]
# Import the csv files; Remove the first two rows
## Immigrants
immigrants_df <- read_csv_custom(1)
## Omnibus
omnibus_df <- read_csv_custom(2)
## Name perceptions
perceptions_df <- read_csv_custom(3)
## Name dataset
names_df <- read.csv(here("data", "names.csv"))
omnibus_df <-
clean_omnibus_df(omnibus_df)
immigrants_df <- clean_immigrant_df(immigrants_df)
perceptions_df <- clean_perceptions_df(perceptions_df)
immigrants_all <- df2comb(immigrants_df, dataset = "immigrants")
omnibus_all <- df2comb(omnibus_df, dataset = "omnibus")
perceptions_all <- df2comb(perceptions_df, dataset = "perceptions")
# Study1
study1 <- perceptions_all %>%
select(rid, name, first, last, w.asian, identity, race, specific.race, citizen, education, education.ord, income, income.ord, match)
# Study2
study2 <- omnibus_all %>%
select(rid, name, first, last, w.asian, identity, race, specific.race, citizen, education, education.ord, income, income.ord, match, res.age, res.male, res.income, res.edu, res.citizenship, res.race)
# Study3
study3 <- immigrants_all %>%
select(rid, name, first, last, w.asian, identity, race, specific.race, citizen, education, education.ord, income, income.ord, match, res.age, res.male, res.income, res.edu, res.citizenship, res.race)
# Rename rid -> id, match -> correct
study1 <- df_rename(study1)
study2 <- df_rename(study2)
study3 <- df_rename(study3)
# Save csv files
# write.csv(study1, here("data_outputs", "study-1-names.csv"))
# write.csv(study2, here("data_outputs", "study-2-names.csv"))
# write.csv(study3, here("data_outputs", "study-3-names.csv"))
# Save rds files
write_rds(study1, here("data_outputs", "study-1-names.rds"))
write_rds(study2, here("data_outputs", "study-2-names.rds"))
write_rds(study3, here("data_outputs", "study-3-names.rds"))
# Save the three datasets as an object
save(study1, study2, study3, file = here("data_outputs", "study123.rda"))
# Save the three datasets as a joined dataframe (using full join)
study1 <- study1 %>% mutate(study = "Study1")
study2 <- study2 %>% mutate(study = "Study2")
study3 <- study3 %>% mutate(study = "Study3")
study_combined <- reduce(list(study1, study2, study3), full_join)
write_rds(study_combined, here("data_outputs", "study123.rds"))
# All
df <- bind_rows(mutate(df2select(immigrants_all), Data = "Study 3"),
mutate(df2select(omnibus_all), Data = "Study 2"),
mutate(df2select(perceptions_all), Data = "Study 1"))
names <- df %>%
group_by(name, first, last, w.asian, identity) %>%
summarise(mean.correct = mean(match),
sd.correct = sd(match))
write.csv(names, here("data_outputs", "names.csv"))
write_rds(names, here("data_outputs", "names.rds"))
# R CRAN packages
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, here, glue, purrr, ggthemes, patchwork, ggrepel, ggpubr, estimatr, fastDummies)
ggplot2::theme_set(ggpubr::theme_pubr())
# Custom functions
source(here("functions", "validate.r"))
source(here("functions", "utils.r"))
load(file = here("data_outputs", "study123.rda"))
study23 <- full_join(study2, study3)
study23 <- study23 %>%
mutate(identity = recode(identity,
"Black or African American" = "Black",
"Asian or Pacific Islander" = "AAPI",
"Hispanic" = "Latino"
))
study123 <- full_join(study1, study2) %>%
full_join(study3)
race_dummies <- study123 %>%
select(race) %>%
dummy_cols() %>%
select(!race)
study123_dummies <- bind_cols(study123, race_dummies)
dum_sum <- study123_dummies %>%
group_by(identity, name) %>%
summarize(white_pct = mean(race_White, na.rm = TRUE),
asian_pct = mean(`race_Asian or Pacific Islander`, na.rm = TRUE),
black_pct = mean(`race_Black or African American`),
latino_pct = mean(race_Hispanic),
other_pct = mean(race_Other))
write_rds(dum_sum, here("data_outputs", "names_race_perception.rds"))
group_group_plot <- map2_dfr(c("Black", "White", "AAPI", "Latino"), c("Black", "White", "AAPI", "Latino"), sum_last_first_names) %>%
ggplot(aes(x = res.race, y = mean_correct,
ymax = mean_correct + 1.96*se_correct,
ymin = mean_correct - 1.96*se_correct,
label = round(mean_correct, 2))) +
geom_pointrange() +
facet_wrap(~`Name type`) +
labs(title = glue("Within group assessment:
A group member assesses their own group's names"),
x = "Respondent/Name", y = "% correct") +
geom_hline(yintercept = 0.5, linetype = "dashed") +
ylim(c(0.3 , 1)) +
geom_text_repel()
white_other_plot <- map2_dfr(c("White", "White", "White"), c("Black", "AAPI", "Latino"), sum_last_first_names) %>%
ggplot(aes(x = identity, y = mean_correct,
ymax = mean_correct + 1.96*se_correct,
ymin = mean_correct - 1.96*se_correct,
label = round(mean_correct, 2))) +
geom_pointrange() +
facet_wrap(~`Name type`) +
labs(title = glue("Between group assessment:
A white assesses other racial group members' names"),
x = "Name", y = "% correct") +
geom_hline(yintercept = 0.5, linetype = "dashed") +
ylim(c(0.3 , 1)) +
geom_text_repel()
other_white_plot <- map2_dfr(c("Black", "AAPI", "Latino"), c("White", "White", "White"), sum_last_first_names) %>%
ggplot(aes(x = res.race, y = mean_correct,
ymax = mean_correct + 1.96*se_correct,
ymin = mean_correct - 1.96*se_correct,
label = round(mean_correct, 2))) +
geom_pointrange() +
facet_wrap(~`Name type`) +
labs(title = glue("Between group assessment:
A non-white assesses whites' names"),
x = "Respondent", y = "% correct") +
geom_hline(yintercept = 0.5, linetype = "dashed") +
ylim(c(0.3 , 1)) +
geom_text_repel()
group_group_plot /
white_other_plot /
other_white_plot
group_group_plot
white_other_plot
other_white_plot
group_group_plot /
white_other_plot /
other_white_plot
# R CRAN packages
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, here, glue, purrr, ggthemes, patchwork, ggrepel, ggpubr, estimatr, fastDummies)
ggplot2::theme_set(ggpubr::theme_pubr())
# Custom functions
source(here("functions", "validate.r"))
source(here("functions", "utils.r"))
group_group_plot /
white_other_plot /
other_white_plot
high_quality_group_group_names <- map2_dfr(c("Black", "White", "AAPI", "Latino"), c("Black", "White", "AAPI", "Latino"), better_than_mean_names)
high_quality_group_group_names %>%
select(res.race, identity, pct_quality_names) %>%
distinct()
write_rds(high_quality_group_group_names, here("data_outputs", "hq_group_group_names.rds"))
names(high_quality_group_group_names)
